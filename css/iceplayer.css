/*
 IcePlayer v.2.0.0 - Player for Site (Icecast2 Online Radio)
 Copyright (c) 2016-2020 Andrew Molchanov
 https://github.com/JoCat/IcePlayer
*/

#ice-player.inline {
    padding: 10px;
}

#ice-player.fixed {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    padding: 10px;
    background-color: #eee;
    font-size: 18px;
    border-top: 1px solid #ddd;
    color:black;
}

#ice-player.fixed #ice-track {
    margin-left: .25em;;
}

#ice-player-el {
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
}

[id*="ice-"] {
    display: inline-flex;
}

#ice-pause {
    display: none;
}

@media (max-width: 767px) {
    #ice-player {
        font-size: 14px;
    }
}

/* Player Icons */
@font-face {
    font-family: 'iceplayer';
    src: url('../font/iceplayer.eot?77906441');
    src: url('../font/iceplayer.eot?77906441#iefix') format('embedded-opentype'),
         url('../font/iceplayer.woff2?77906441') format('woff2'),
         url('../font/iceplayer.woff?77906441') format('woff'),
         url('../font/iceplayer.ttf?77906441') format('truetype'),
         url('../font/iceplayer.svg?77906441#iceplayer') format('svg');
    font-weight: normal;
    font-style: normal;
}

[id^="ice-"]:before, [id*=" ice-"]:before {
    font-family: "iceplayer";
    font-style: normal;
    font-weight: normal;
    speak: none;
    display: inline-block;
    text-decoration: inherit;
    width: 1em;
    margin: 0 .25em;
    text-align: center;
    cursor: pointer;

    /* For safety - reset parent styles, that can break glyph codes*/
    font-variant: normal;
    text-transform: none;
    /* fix buttons height, for twitter bootstrap */
    line-height: 1em;
    /* Font smoothing. That was taken from TWBS */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

#ice-pause:before { content: '\f00e'; } /* '' */
#ice-play:before { content: '\f00f'; } /* '' */
#ice-stop:before { content: '\f080'; } /* '' */
/* Player Icons End */

/* Input Range Stile (Volume) */
input[type=range] {
    -webkit-appearance: none;
    margin: 0 .25em;;
    width: 100px;
    font-size: inherit;
    background-color: transparent;
}
input[type=range]:focus {outline: none;}
input[type=range]::-webkit-slider-runnable-track {
    width: 100%;
    height: calc(4px + 1 * (1em / 8));
    cursor: pointer;
    background: #000;
    border-radius: calc((4px + 1 * (1em / 8)) / 2);
    position: relative;
    bottom: calc(50% - (4px + 1 * (1em / 8)) / 2);
}
input[type=range]::-webkit-slider-thumb {
    box-shadow: -1px 1px 2px rgba(0, 0, 0, .25), 1px -1px 2px rgba(0, 0, 0, .25);
    height: calc(8px + 2 * (1em / 8));
    width: calc(8px + 2 * (1em / 8));
    border-radius: 50%;
    background: #fff;
    cursor: pointer;
    -webkit-appearance: none;
    margin-top: calc((4px + 1 * (1em / 8)) / -2);
}
input[type=range]::-moz-range-track {
    width: 100%;
    height: calc(4px + 1 * (1em / 8));
    cursor: pointer;
    background: #000;
    border-radius: calc((4px + 1 * (1em / 8)) / 2);
    position: relative;
    bottom: calc(50% - (4px + 1 * (1em / 8)) / 2);
}
input[type=range]::-moz-range-thumb {
    box-shadow: -1px 1px 2px rgba(0, 0, 0, .25), 1px -1px 2px rgba(0, 0, 0, .25);
    height: calc(8px + 2 * (1em / 8));
    width: calc(8px + 2 * (1em / 8));
    border: none;
    border-radius: 50%;
    background: #fff;
    cursor: pointer;
    -webkit-appearance: none;
    margin-top: calc((4px + 1 * (1em / 8)) / -2);
}
input[type=range]::-ms-track {
    width: 100%;
    height: calc(4px + 1 * (1em / 8));
    cursor: pointer;
    background: #000;
    border-radius: calc((4px + 1 * (1em / 8)) / 2);
    position: relative;
    bottom: calc(50% - (4px + 1 * (1em / 8)) / 2);
    border: none;
    color: transparent;
}
input[type=range]::-ms-thumb {
    box-shadow: -1px 1px 2px rgba(0, 0, 0, .25), 1px -1px 2px rgba(0, 0, 0, .25);
    height: calc(8px + 2 * (1em / 8));
    width: calc(8px + 2 * (1em / 8));
    border-radius: 50%;
    background: #fff;
    cursor: pointer;
    -webkit-appearance: none;
    margin-top: calc((4px + 1 * (1em / 8)) / -2);
}
/* Input Range Stile (Volume) End  */